#!/usr/bin/env ruby
require 'shebang'

# Tracking time, LIKE A BOSS.
class Default < Shebang::Command
  command :default
  banner  'A simple timer application'
  usage   '$ timer [COMMAND] [OPTIONS]'

  help 'Commands', '
  timer         - Shows the amount of spent time
  timer start   - Starts a new timer
  timer stop    - Stops an existing timer
  timer restart - Stops the current timer and starts a new one'

  o :h, :help, 'Shows this help message', :method => :help
  o :p, :path, 'Path to the timer file' , :type => String,
    :default => '~/.timer'

  def initialize
    super

    @path = File.expand_path(option(:p))
  end

  # Shows the current amount of time spent. This method also shows the time in
  # hours to make it easier to enter it in Redmine.
  def index
    time  = time_spent
    hours = ( (1.0/60.0).to_f * time ).round(2)

    puts "Time spent: #{time} minutes (#{hours} hours)"
  end

  # Starts a new timer
  def start
    File.open(@path, 'w') do |handle|
      handle.write(Time.new.to_i)
      handle.close
    end

    puts 'Starting a new timer'
  end

  # Stops the timer and displays the time
  def stop
    puts 'Stopping timer'
    index

    File.unlink(@path) if File.exist?(@path)
  end

  # Restarts the timer
  def restart
    stop
    start
  end

  private

  # Gets the time spent.
  def time_spent
    if File.exist?(@path)
      time = File.read(@path).to_i

      return (Time.new.to_i - time) / 60
    else
      return 0
    end
  end
end

Shebang.run
