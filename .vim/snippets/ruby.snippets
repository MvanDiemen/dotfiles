# Collection of various Ruby snippets.
snippet #! Inserts a Ruby shebang
	#!/usr/bin/env ruby
#
# Debugging snippets.
#
snippet ap_val Prints a value using Awesome Print
	require 'awesome_print'; ap ${1:value}
snippet pry_binding Inserts a Pry binding
	require 'pry'; binding.pry
snippet pry_daemon Inserts a Pry binding for daemons
	STDIN.reopen('/dev/tty'); require 'pry'; binding.pry
#
# Language elements such as method definitions.
#
snippet def Inserts a new method
	##
	# ${2:Description of this method.}
	#
	def ${1:method_name}
	  ${0}
	end
snippet class Inserts a new class
	##
	# ${2:Class description}
	#
	class ${1:name}
	  ${0}
	end # $1
snippet module Inserts a new module
	module ${1:name}
	  ${0}
	end # $1
snippet do Inserts a do/end block
	do
	  ${0}
	end
snippet if Inserts an if statement
	if ${1:statement}
	  ${0}
	end
snippet rlint-def Inserts a method definition for ruby-lint
	klass.define_method('${1:name}') do |method|
	  ${0}
	end
snippet rlint-arg Inserts a argument definition for ruby-lint
	method.define_${1:}argument('${2:name}')${0}
snippet concern Extends a module using a Concern
	extend ActiveSupport::Concern
snippet inc Inserts an include statement
	include ${1:module}
snippet gemspec Inserts a new Gem specification
	require File.expand_path('../lib/${1:version path}', __FILE__)

	Gem::Specification.new do |gem|
	  gem.name        = '${2:name}'
	  gem.version     = ${3:version}
	  gem.authors     = ['${4:author}']
	  gem.summary     = '${5:summary}'
	  gem.description = gem.summary
	  gem.has_rdoc    = 'yard'

	  gem.required_ruby_version = '>= 1.9.2'

	  gem.files       = \`git ls-files\`.split("\n").sort
	  gem.executables = gem.files.grep(%r{^bin/}).map{ |f| File.basename(f) }
	  gem.test_files  = gem.files.grep(%r{^(test|spec|features)/})
	end
#
# Snippets for documentation.
#
snippet @param Inserts a new YARDOC parameter tag
	@param [${1:type}] ${2:name} ${3:description}
snippet @return Inserts a new YARDOC return tag
	@return [${1:type}]
